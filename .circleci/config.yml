version: 2.1 # use CircleCI 2.0

orbs:
  jira: circleci/jira@1.0.5
  #slack: circleci/slack@4.1.3

jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:latest
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      #- run: git submodule sync
      #- run: git submodule update --init
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              make openssl tar gzip curl
      #- run:
      #    name: Install dependencies
      #    command: |
      #      apk add --no-cache \
      #        py-pip=9.0.0-r1
      #      pip install \
      #        docker-compose==1.12.0 \
      #        awscli==1.11.76
      #- restore_cache:
      #    keys:
      #      - v1-{{ .Branch }}
      #    paths:
      #      - /caches/app.tar
      #- run:
      #    name: Load Docker image layer cache
      #    command: |
      #      set +o pipefail
      #      docker load -i /caches/lfs-chroot.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --cache-from=freedoom \
              -t innovanon/freedoom .
      #- run:
      #    name: Save Docker image layer cache
      #    command: |
      #      mkdir -p /caches
      #      docker save -o /caches/lfs-chroot.tar lfs-chroot
      #- save_cache:
      #    key: v1-{{ .Branch }}-{{ epoch }}
      #    paths:
      #      - /caches/lfs-chroot.tar
      #- run:
      #    name: Run tests
      #    command: |
      #      docker-compose -f ./docker-compose.test.yml up
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              #docker tag lfs-chroot "InnovAnon-Inc/lfs-chroot:${CIRCLE_SHA1}"
              #docker push           "InnovAnon-Inc/lfs-chroot:${CIRCLE_SHA1}"
              docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
              #echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME
              docker push innovanon/freedoom
            fi
#      - run:
#          name: Push upstream (docker-whatever)
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              curl --location --request POST \
#                'https://circleci.com/api/v2/project/github/InnovAnon-Inc/docker-whatever/pipeline' \
#                --header 'Content-Type: application/json' \
#                --data '{"branch":"master"}' \
#                -u "${API_TOKEN}:"
#            fi
#

